# -*- coding: utf-8 -*-

import Stribog as hash, argparse
	
	
def getArgs():
    parser = argparse.ArgumentParser()
    parser.add_argument('inFile')
    parser.add_argument('outFile')
    return parser.parse_args()	

	
def SignGen(h, d):
    ''' 
    1. Вычислить целое число α, двоичным представление которого является H;
    2. Определить e=α mod n, если e=0, задать e=1;
    3. Сгенерировать случайное число k, удовлетворяющее условию 0<k<n;
    4. Вычислить точку эллиптической кривой C=k*G;
    5. Определить r = xC mod n, где xC — x-координата точки C. Если r=0, то вернуться к шагу 4;
    6. Вычислить значение s = (rd+ke) mod n. Если s=0, то вернуться к шагу 4;
    7. Вернуть значение r||s в качестве цифровой подписи.
    '''
    return sign


def SignVer(sign, M, Q):
    '''
    1. По полученной подписи восстановить числа r и s. Если не выполнены неравенства 0<r<n и 0<s<n, тогда вернуть «подпись не верна»;
    2. Вычислить хеш сообщения M: H=h(M);
    3. Вычислить целое число α, двоичным представление которого является H;
    4. Определить e=α mod n, если e=0, задать e=1;
    5. Вычислить v = e-1 mod n;
    6. Вычислить значения z1 = s*v mod n и z2 = -r*v mod n;
    7. Вычислить точку эллиптической кривой C = z1*G + z2*Q;
    8. Определить R = xc mod n, где xc — x-координата точки C;
    9. Если R=r, то подпись верна. В противном случае подпись не принимается.
    '''	
	
	
def main():
    print ('GOST 34.10.12')
    # шаг 1 - Вычисление хэш-функции от сообщения h(M)
    args = getArgs()
    with open(args.inFile) as f:
        data = f.read() 
		
    h = hash.Stribog512()
    temp = []
    for i in data:
        temp.append(ord(i))    

    hashD = h.GetHash(temp)
    h_hex = ''.join('%02x' % byte for byte in hashD)   	
    print ('hash: ', h_hex)
	# шаг 2 - Вычисление e=z^bmodq, и если e=0, положить e=1
	
# параметры ЭЦП
 # модуль эллиптической кривой
 # p = 6277101735386680763835789423207666416083908700390324961279
 #  a & b задают уравнение эллиптической кривой 
 # a = -3;
 # b = 2455155546008943817740293915197451784769108058161191238065
 # G — точка эллиптической кривой большого порядка
 # xG = 602046282375688656758213480587526111916698976636884684818 #(x-координата точки G)
 # yG=174050332293622031404857552280219410364023488927386650641 #(y-координата точки G) 
 # n — порядок точки G
 # n = 6277101735386680763835789423176059013767194773182842284081
 # h — параметр, называемый кофактор. Определяется отношением общего числа точек на эллиптической кривой к порядку точки G.
 # h = 1
 
if __name__ == "__main__":
    main()		